[{"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\index.js":"1","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\reportWebVitals.js":"2","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\App.js":"3","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\exampleComponent.js":"4","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\Editor.js":"5","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\RightTable.js":"6","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\BottomTable.js":"7","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\BottomRightTable.js":"8","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\ContentEditor.js":"9","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\ImageOnly.js":"10","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\LeftSelector.js":"11","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\Table.js":"12","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\KeyTable.js":"13","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\TableHolder.js":"14","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\JSONReader.js":"15"},{"size":695,"mtime":1621205869526,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":528,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":2142,"mtime":1608753459016,"results":"20","hashOfConfig":"17"},{"size":3617,"mtime":1622169554162,"results":"21","hashOfConfig":"17"},{"size":4868,"mtime":1614216610846,"results":"22","hashOfConfig":"17"},{"size":3239,"mtime":1614220710764,"results":"23","hashOfConfig":"17"},{"size":6657,"mtime":1622233446403,"results":"24","hashOfConfig":"17"},{"size":3142,"mtime":1621559222975,"results":"25","hashOfConfig":"17"},{"size":1643,"mtime":1614220612007,"results":"26","hashOfConfig":"17"},{"size":5141,"mtime":1622234059893,"results":"27","hashOfConfig":"17"},{"size":6398,"mtime":1622682677038,"results":"28","hashOfConfig":"17"},{"size":6917,"mtime":1616185410799,"results":"29","hashOfConfig":"17"},{"size":2744,"mtime":1622683006007,"results":"30","hashOfConfig":"17"},{"size":469,"mtime":1617999151949,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"5tyx9s",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\index.js",["69","70"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ExampleComponent from \"./exampleComponent\"\n import reportWebVitals from './reportWebVitals';\n//import {render} from \"@testing-library/react\";\nimport Editor from \"./Editor\";\nimport LeftSelector from \"./LeftSelector\";\nfunction dynamic() {\n    ReactDOM.render(\n       <LeftSelector/>,\n        document.getElementById('left')\n    );\n}\n dynamic();\n//setInterval(dynamic, 1000);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["71","72"],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\reportWebVitals.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\App.js",[],["73","74"],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\exampleComponent.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\Editor.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\RightTable.js",["75"],"import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from \"./Table\";\r\nimport KeyTable from \"./KeyTable\";\r\n\r\n\r\nexport class RightTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [1, 2,],\r\n            title: \"\",\r\n            probStatement: \"\",\r\n            showImage: true\r\n        }\r\n        this.append = this.append.bind(this);\r\n        this.pop = this.pop.bind(this);\r\n        this.showImageHandler = this.showImageHandler.bind(this);\r\n\r\n    }\r\n\r\n    renderTable() {\r\n        return <table className=\"\">\r\n            <thead>\r\n            <tr>\r\n                {this.renderRowsSelection(this.state.columns.length)}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.renderRows(this.state.columns.length)}\r\n            </tbody>\r\n        </table>\r\n    }\r\n\r\n    append(e) {\r\n        let a = this.state.columns;\r\n        a.push(a.length + 1);\r\n        this.setState({\r\n            columns: a\r\n        })\r\n        //rerender here\r\n        this.renderTable();\r\n    }\r\n\r\n    pop(e) {\r\n        let a = this.state.columns;\r\n        console.log(\"popping: \" + a.length);\r\n        if (a.length !== 1) {\r\n            a.pop();\r\n            this.setState({\r\n                columns: a\r\n            })\r\n            //rerender here\r\n            this.renderTable();\r\n        }\r\n    }\r\n\r\n    tableOptions() {\r\n        return <select className={\"headerSelector\"}>\r\n            <option value={\"IP Address\"}>\"IP Address\"</option>\r\n            <option value={\"MAC Address\"}>MAC Address</option>\r\n            <option value={\"VLAN\"}>VLAN</option>\r\n            <option value={\"Router\"}>Router</option>\r\n            <option value={\"Gateway\"}>Gateway</option>\r\n        </select>\r\n    }\r\n\r\n    onTitleChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    onProbStatementChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    renderRowsSelection(rows) {\r\n        let r = [<th scope=\"col\">{this.tableOptions()} </th>];\r\n        for (let i = 0; i < rows - 1; i++) {\r\n            r.push(<th scope=\"col\">{this.tableOptions()} </th>);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    renderRows(rows) {\r\n        let r = [<td>1</td>];\r\n        for (let i = 0; i < rows - 1; i++) {\r\n            r.push(<td>1</td>);\r\n        }\r\n        return <tr>{r}</tr>;\r\n    }\r\n\r\n    showImageHandler(event) {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        this.setState({\r\n            showImage: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"rightBody\">\r\n\r\n                    <h3 className={\"centerText\"}>Title</h3>\r\n                    <div className={\"centerInput\"}>\r\n                        <input type=\"text\" name=\"Title\" className={\"inputBoxLong\"} placeholder={\"Title\"}\r\n                               onChange={this.onTitleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <br/>\r\n                    <h3 className={\"centerText\"}>Problem Info</h3>\r\n                    <div className={\"imageToggler\"}>\r\n                    </div>\r\n                    <div className=\"graphicsSelector\">\r\n                        <div className=\"routerImageBottom\">\r\n                            <label className=\"container\">\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.showImage}\r\n                                       onChange={this.showImageHandler}/>\r\n                                <span className=\"checkmark\"></span>\r\n                                <h5 className=\"labelText\"> Show Image?</h5>\r\n                            </label>\r\n                            <img className={this.state.showImage ? \"routerImage\" : \"routerImage hidden\"}\r\n                                 src=\"https://img-en.fs.com/community/wp-content/uploads/2017/10/How-routers-route-packets-from-the-source-to-the-destination.jpg\"/>\r\n                        </div>\r\n                        <div className=\"TableDiv\">\r\n                            <Table/>\r\n                        </div>\r\n                    </div>\r\n                    <KeyTable/>\r\n                    <div className={\"centerInput\"}>\r\n                        <label className={\"labelClass\"}>Problem Statement</label>\r\n                        <input type={\"text\"} name={\"problemStatement\"} className={\"inputBoxLong\"}\r\n                               placeholder={\"Problem Statement\"} onChange={this.onProbStatementChange}\r\n                               value={this.state.probStatement}/>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default RightTable;","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\BottomTable.js",["76"],"import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from \"./Table\";\r\nimport KeyTable from \"./KeyTable\";\r\n\r\n\r\nexport class BottomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            probStatement: \"\",\r\n            showImage: true\r\n        }\r\n        this.showImageHandler = this.showImageHandler.bind(this);\r\n\r\n    }\r\n\r\n    onTitleChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    onProbStatementChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    showImageHandler(event) {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        this.setState({\r\n            showImage: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"rightBody\">\r\n\r\n                    <h3 className={\"centerText\"}>Title</h3>\r\n                    <div className={\"centerInput\"}>\r\n                        <input type=\"text\" name=\"Title\" className={\"inputBoxLong\"} placeholder={\"Title\"}\r\n                               onChange={this.onTitleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <br/>\r\n                    <h3 className={\"centerText\"}>Problem Info</h3>\r\n\r\n\r\n                    <div className=\"graphicsSelectorBottom\">\r\n                        <div className=\"routerImageBottom\">\r\n                            <label className=\"container\">\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.showImage}\r\n                                       onChange={this.showImageHandler}/>\r\n                                <span className=\"checkmark\"></span>\r\n                                <h5 className=\"labelText\"> Show Image?</h5>\r\n                            </label>\r\n                            <img className={this.state.showImage ? \"routerImage\" : \"routerImage hidden\"}\r\n                                 src=\"https://img-en.fs.com/community/wp-content/uploads/2017/10/How-routers-route-packets-from-the-source-to-the-destination.jpg\"/>\r\n                        </div>\r\n                    </div>\r\n                    <KeyTable/>\r\n                    <div className=\"sideBySide\">\r\n                        <div className=\"TableDivBottom BottomLeft\">\r\n                            <Table/>\r\n                        </div>\r\n                        <div className=\"TableDivBottom BottomRight\">\r\n                            <Table/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"centerInput\"}>\r\n                        <label className={\"labelClass\"}>Problem Statement</label>\r\n                        <input type={\"text\"} name={\"problemStatement\"} className={\"inputBoxLong\"}\r\n                               placeholder={\"Problem Statement\"} onChange={this.onProbStatementChange}\r\n                               value={this.state.probStatement}/>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default BottomTable;","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\BottomRightTable.js",["77"],"import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport KeyTable from \"./KeyTable\";\r\nimport TableHolder from \"./TableHolder\";\r\n\r\nexport class BottomRightTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageFormats: [\"default-neato.png\", \"default-circo.png\", \"stp-dot.png\", \"stp-circo-nohost.png\", \"stp-dot-nohost.png\", \"stp-neato-nohost.png\"],\r\n            showImage: true,\r\n            currentImage: \"default-neato.png\",\r\n            select: \"\",\r\n            rightTable: <TableHolder reference={this} saveDataTable={() => this.saveRightTable}/>,\r\n            bottomRightTable: <TableHolder reference={this} saveDataTable={() => this.saveBottomRightTable}/>,\r\n            bottomLeftTable: <TableHolder reference={this} saveDataTable={this.saveBottomLeftTable}/>,\r\n            contents: {\r\n                \"BottomLeft\": {},\r\n                \"BottomRight\": {},\r\n                \"RightTable\": {}\r\n            }\r\n        };\r\n        this.setupImageArray = this.setupImageArray.bind(this);\r\n        this.showImageHandler = this.showImageHandler.bind(this);\r\n        this.changeImage = this.changeImage.bind(this);\r\n        this.saveRightTable = this.saveRightTable.bind(this);\r\n        this.saveBottomRightTable = this.saveBottomRightTable.bind(this);\r\n        this.saveBottomLeftTable = this.saveBottomLeftTable.bind(this);\r\n    }\r\n\r\n    saveBottomLeftTable(data, reference) {\r\n        let update = reference.state.contents;\r\n        console.log(\"111111\")\r\n        update[\"BottomLeft\"] = data\r\n        reference.setState({\r\n            contents: update\r\n        })\r\n        reference.props.saveData(reference.state.contents)\r\n    }\r\n\r\n    saveBottomRightTable(data, reference) {\r\n        let update = reference.state.contents;\r\n        console.log(\"111111\")\r\n        update[\"BottomRight\"] = data\r\n        reference.setState({\r\n            contents: update\r\n        })\r\n        reference.props.saveData(reference.state.contents)\r\n    }\r\n\r\n    saveRightTable(data, reference) {\r\n        let update = reference.state.contents;\r\n        console.log(\"111111\")\r\n        update[\"RightTable\"] = data\r\n        reference.setState({\r\n            contents: update\r\n        })\r\n        reference.props.saveData(reference.state.contents)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setupImageArray();\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(\"so it updated...what now?\")\r\n        this.props.saveData(this.state.contents)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.saveData(this.state.contents)\r\n    }\r\n\r\n    getCurrentImage() {\r\n        return this.state.currentImage;\r\n    }\r\n\r\n    getTableHolders() {\r\n        let th = {\r\n            rightTable: this.state.rightTable,\r\n            bottomRightTable: this.state.bottomRightTable,\r\n            bottomLeftTable: this.state.bottomLeftTable\r\n        }\r\n        return th;\r\n    }\r\n\r\n    onTitleChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    onProbStatementChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    showImageHandler(event) {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        this.setState({\r\n            showImage: value\r\n        });\r\n\r\n    }\r\n\r\n    changeImage(event) {\r\n        let val = event.target.value;\r\n        this.setState({\r\n            currentImage: val\r\n        })\r\n    }\r\n\r\n    setupImageArray() {\r\n        let images = this.state.imageFormats\r\n        let a = [<option value={images[0]}>{images[0]}</option>];\r\n        for (let i = 1; i < images.length; i++) {\r\n            a.push(<option value={images[i]}>{images[i]}</option>);\r\n        }\r\n        let af = <select className={\"headerSelector\"}\r\n                         onChange={this.changeImage}>\r\n            {a}\r\n        </select>;\r\n        this.setState({\r\n            select: af\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"rightBody\">\r\n                    <h3 className={\"centerText\"}>Title</h3>\r\n                    <div className={\"centerInput\"}>\r\n                        <input type=\"text\" name=\"Title\" className={\"inputBoxLong\"} placeholder={\"Title\"}\r\n                               onChange={this.onTitleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <br/>\r\n                    <h3 className={\"centerText\"}>Problem Info</h3>\r\n                    <div className=\"graphicsSelector\">\r\n                        <div className=\"routerImageBottom\">\r\n                            <div className=\"tablePadding\">\r\n                                <label className=\"container\">\r\n                                    <input type=\"checkbox\"\r\n                                           checked={this.state.showImage}\r\n                                           onChange={this.showImageHandler}/>\r\n                                    <span className=\"checkmark\"></span>\r\n                                    <h5 className=\"labelText\"> Show Image?</h5>\r\n                                </label>\r\n                                {this.state.select}\r\n                            </div>\r\n\r\n                            <img className={this.state.showImage ? \"routerImage\" : \"routerImage hidden\"}\r\n                                 src={this.state.currentImage}/>\r\n                        </div>\r\n                        <div className=\"TableDiv\">\r\n                            {this.state.rightTable}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"sideBySide\">\r\n                        <div className=\"TableDivBottom BottomLeft\">\r\n                            {this.state.bottomLeftTable}\r\n                        </div>\r\n                        <div className=\"TableDivBottom BottomRight\">\r\n                            {this.state.bottomRightTable}\r\n                        </div>\r\n                    </div>\r\n                    <KeyTable/>\r\n                    <div className={\"centerInput\"}>\r\n                        <label className={\"labelClass\"}>Problem Statement</label>\r\n                        <input type={\"text\"} name={\"problemStatement\"} className={\"inputBoxLong\"}\r\n                               placeholder={\"Problem Statement\"} onChange={this.onProbStatementChange}\r\n                               value={this.state.probStatement}/>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default BottomRightTable\r\n","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\ContentEditor.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\ImageOnly.js",["78","79"],"import React, {Fragment} from \"react\";\r\nimport KeyTable from \"./KeyTable\";\r\n\r\nexport class ImageOnly extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showImage: true\r\n        }\r\n        this.showImageHandler = this.showImageHandler.bind(this);\r\n    }\r\n\r\n    showImageHandler(event) {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        this.setState({\r\n            showImage: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"rightBody\">\r\n                    <div className=\"graphicsSelector\">\r\n                        <div className=\"routerImageBottom\">\r\n                            <label className=\"container\">\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.showImage}\r\n                                       onChange={this.showImageHandler}/>\r\n                                <span className=\"checkmark\"></span>\r\n                                <h5 className= \"labelText\">  Show Image?</h5>\r\n                            </label>\r\n                            <img className={this.state.showImage ? \"routerImage\" : \"routerImage hidden\"}\r\n                                 src=\"https://img-en.fs.com/community/wp-content/uploads/2017/10/How-routers-route-packets-from-the-source-to-the-destination.jpg\"/>\r\n                        </div>\r\n                    </div>\r\n                    <KeyTable/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default ImageOnly;","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\LeftSelector.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\Table.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\KeyTable.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\TableHolder.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\JSONReader.js",[],{"ruleId":"80","severity":1,"message":"81","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":24},{"ruleId":"80","severity":1,"message":"84","line":7,"column":8,"nodeType":"82","messageId":"83","endLine":7,"endColumn":14},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"85","replacedBy":"89"},{"ruleId":"87","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":127,"column":29,"nodeType":"93","endLine":128,"endColumn":165},{"ruleId":"91","severity":1,"message":"92","line":62,"column":29,"nodeType":"93","endLine":63,"endColumn":165},{"ruleId":"91","severity":1,"message":"92","line":156,"column":29,"nodeType":"93","endLine":157,"endColumn":65},{"ruleId":"80","severity":1,"message":"94","line":1,"column":16,"nodeType":"82","messageId":"83","endLine":1,"endColumn":24},{"ruleId":"91","severity":1,"message":"92","line":34,"column":29,"nodeType":"93","endLine":35,"endColumn":165},"no-unused-vars","'ExampleComponent' is defined but never used.","Identifier","unusedVar","'Editor' is defined but never used.","no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation"]