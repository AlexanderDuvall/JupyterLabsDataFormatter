[{"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\index.js":"1","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\reportWebVitals.js":"2","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\App.js":"3","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\exampleComponent.js":"4","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\Editor.js":"5","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\RightTable.js":"6","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\BottomTable.js":"7","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\BottomRightTable.js":"8","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\ContentEditor.js":"9","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\ImageOnly.js":"10","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\LeftSelector.js":"11","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\Table.js":"12","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\KeyTable.js":"13","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\TableHolder.js":"14","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\JSONReader.js":"15"},{"size":695,"mtime":1621205869526,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":528,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":2142,"mtime":1608753459016,"results":"20","hashOfConfig":"17"},{"size":2874,"mtime":1623378538806,"results":"21","hashOfConfig":"17"},{"size":4868,"mtime":1614216610846,"results":"22","hashOfConfig":"17"},{"size":3239,"mtime":1614220710764,"results":"23","hashOfConfig":"17"},{"size":7021,"mtime":1623379620793,"results":"24","hashOfConfig":"17"},{"size":3070,"mtime":1623376814585,"results":"25","hashOfConfig":"17"},{"size":1643,"mtime":1614220612007,"results":"26","hashOfConfig":"17"},{"size":3875,"mtime":1623380014991,"results":"27","hashOfConfig":"17"},{"size":7478,"mtime":1623377247592,"results":"28","hashOfConfig":"17"},{"size":6917,"mtime":1616185410799,"results":"29","hashOfConfig":"17"},{"size":2744,"mtime":1622683006007,"results":"30","hashOfConfig":"17"},{"size":469,"mtime":1617999151949,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"5tyx9s",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\index.js",["68","69"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ExampleComponent from \"./exampleComponent\"\n import reportWebVitals from './reportWebVitals';\n//import {render} from \"@testing-library/react\";\nimport Editor from \"./Editor\";\nimport LeftSelector from \"./LeftSelector\";\nfunction dynamic() {\n    ReactDOM.render(\n       <LeftSelector/>,\n        document.getElementById('left')\n    );\n}\n dynamic();\n//setInterval(dynamic, 1000);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["70","71"],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\reportWebVitals.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\App.js",[],["72","73"],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\exampleComponent.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\Editor.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\RightTable.js",["74"],"import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from \"./Table\";\r\nimport KeyTable from \"./KeyTable\";\r\n\r\n\r\nexport class RightTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [1, 2,],\r\n            title: \"\",\r\n            probStatement: \"\",\r\n            showImage: true\r\n        }\r\n        this.append = this.append.bind(this);\r\n        this.pop = this.pop.bind(this);\r\n        this.showImageHandler = this.showImageHandler.bind(this);\r\n\r\n    }\r\n\r\n    renderTable() {\r\n        return <table className=\"\">\r\n            <thead>\r\n            <tr>\r\n                {this.renderRowsSelection(this.state.columns.length)}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.renderRows(this.state.columns.length)}\r\n            </tbody>\r\n        </table>\r\n    }\r\n\r\n    append(e) {\r\n        let a = this.state.columns;\r\n        a.push(a.length + 1);\r\n        this.setState({\r\n            columns: a\r\n        })\r\n        //rerender here\r\n        this.renderTable();\r\n    }\r\n\r\n    pop(e) {\r\n        let a = this.state.columns;\r\n        console.log(\"popping: \" + a.length);\r\n        if (a.length !== 1) {\r\n            a.pop();\r\n            this.setState({\r\n                columns: a\r\n            })\r\n            //rerender here\r\n            this.renderTable();\r\n        }\r\n    }\r\n\r\n    tableOptions() {\r\n        return <select className={\"headerSelector\"}>\r\n            <option value={\"IP Address\"}>\"IP Address\"</option>\r\n            <option value={\"MAC Address\"}>MAC Address</option>\r\n            <option value={\"VLAN\"}>VLAN</option>\r\n            <option value={\"Router\"}>Router</option>\r\n            <option value={\"Gateway\"}>Gateway</option>\r\n        </select>\r\n    }\r\n\r\n    onTitleChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    onProbStatementChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    renderRowsSelection(rows) {\r\n        let r = [<th scope=\"col\">{this.tableOptions()} </th>];\r\n        for (let i = 0; i < rows - 1; i++) {\r\n            r.push(<th scope=\"col\">{this.tableOptions()} </th>);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    renderRows(rows) {\r\n        let r = [<td>1</td>];\r\n        for (let i = 0; i < rows - 1; i++) {\r\n            r.push(<td>1</td>);\r\n        }\r\n        return <tr>{r}</tr>;\r\n    }\r\n\r\n    showImageHandler(event) {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        this.setState({\r\n            showImage: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"rightBody\">\r\n\r\n                    <h3 className={\"centerText\"}>Title</h3>\r\n                    <div className={\"centerInput\"}>\r\n                        <input type=\"text\" name=\"Title\" className={\"inputBoxLong\"} placeholder={\"Title\"}\r\n                               onChange={this.onTitleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <br/>\r\n                    <h3 className={\"centerText\"}>Problem Info</h3>\r\n                    <div className={\"imageToggler\"}>\r\n                    </div>\r\n                    <div className=\"graphicsSelector\">\r\n                        <div className=\"routerImageBottom\">\r\n                            <label className=\"container\">\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.showImage}\r\n                                       onChange={this.showImageHandler}/>\r\n                                <span className=\"checkmark\"></span>\r\n                                <h5 className=\"labelText\"> Show Image?</h5>\r\n                            </label>\r\n                            <img className={this.state.showImage ? \"routerImage\" : \"routerImage hidden\"}\r\n                                 src=\"https://img-en.fs.com/community/wp-content/uploads/2017/10/How-routers-route-packets-from-the-source-to-the-destination.jpg\"/>\r\n                        </div>\r\n                        <div className=\"TableDiv\">\r\n                            <Table/>\r\n                        </div>\r\n                    </div>\r\n                    <KeyTable/>\r\n                    <div className={\"centerInput\"}>\r\n                        <label className={\"labelClass\"}>Problem Statement</label>\r\n                        <input type={\"text\"} name={\"problemStatement\"} className={\"inputBoxLong\"}\r\n                               placeholder={\"Problem Statement\"} onChange={this.onProbStatementChange}\r\n                               value={this.state.probStatement}/>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default RightTable;","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\BottomTable.js",["75"],"import React from \"react\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from \"./Table\";\r\nimport KeyTable from \"./KeyTable\";\r\n\r\n\r\nexport class BottomTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: \"\",\r\n            probStatement: \"\",\r\n            showImage: true\r\n        }\r\n        this.showImageHandler = this.showImageHandler.bind(this);\r\n\r\n    }\r\n\r\n    onTitleChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    onProbStatementChange(event) {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    showImageHandler(event) {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        this.setState({\r\n            showImage: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"rightBody\">\r\n\r\n                    <h3 className={\"centerText\"}>Title</h3>\r\n                    <div className={\"centerInput\"}>\r\n                        <input type=\"text\" name=\"Title\" className={\"inputBoxLong\"} placeholder={\"Title\"}\r\n                               onChange={this.onTitleChange} value={this.state.title}/>\r\n                    </div>\r\n                    <br/>\r\n                    <h3 className={\"centerText\"}>Problem Info</h3>\r\n\r\n\r\n                    <div className=\"graphicsSelectorBottom\">\r\n                        <div className=\"routerImageBottom\">\r\n                            <label className=\"container\">\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.showImage}\r\n                                       onChange={this.showImageHandler}/>\r\n                                <span className=\"checkmark\"></span>\r\n                                <h5 className=\"labelText\"> Show Image?</h5>\r\n                            </label>\r\n                            <img className={this.state.showImage ? \"routerImage\" : \"routerImage hidden\"}\r\n                                 src=\"https://img-en.fs.com/community/wp-content/uploads/2017/10/How-routers-route-packets-from-the-source-to-the-destination.jpg\"/>\r\n                        </div>\r\n                    </div>\r\n                    <KeyTable/>\r\n                    <div className=\"sideBySide\">\r\n                        <div className=\"TableDivBottom BottomLeft\">\r\n                            <Table/>\r\n                        </div>\r\n                        <div className=\"TableDivBottom BottomRight\">\r\n                            <Table/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={\"centerInput\"}>\r\n                        <label className={\"labelClass\"}>Problem Statement</label>\r\n                        <input type={\"text\"} name={\"problemStatement\"} className={\"inputBoxLong\"}\r\n                               placeholder={\"Problem Statement\"} onChange={this.onProbStatementChange}\r\n                               value={this.state.probStatement}/>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default BottomTable;","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\BottomRightTable.js",["76"],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\ContentEditor.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\ImageOnly.js",["77","78"],"import React, {Fragment} from \"react\";\r\nimport KeyTable from \"./KeyTable\";\r\n\r\nexport class ImageOnly extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showImage: true\r\n        }\r\n        this.showImageHandler = this.showImageHandler.bind(this);\r\n    }\r\n\r\n    showImageHandler(event) {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        this.setState({\r\n            showImage: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"rightBody\">\r\n                    <div className=\"graphicsSelector\">\r\n                        <div className=\"routerImageBottom\">\r\n                            <label className=\"container\">\r\n                                <input type=\"checkbox\"\r\n                                       checked={this.state.showImage}\r\n                                       onChange={this.showImageHandler}/>\r\n                                <span className=\"checkmark\"></span>\r\n                                <h5 className= \"labelText\">  Show Image?</h5>\r\n                            </label>\r\n                            <img className={this.state.showImage ? \"routerImage\" : \"routerImage hidden\"}\r\n                                 src=\"https://img-en.fs.com/community/wp-content/uploads/2017/10/How-routers-route-packets-from-the-source-to-the-destination.jpg\"/>\r\n                        </div>\r\n                    </div>\r\n                    <KeyTable/>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default ImageOnly;","C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\LeftSelector.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\Table.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\KeyTable.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\TableHolder.js",[],"C:\\Users\\alexa\\WebstormProjects\\jupyterlabscreator\\src\\JSONReader.js",[],{"ruleId":"79","severity":1,"message":"80","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":24},{"ruleId":"79","severity":1,"message":"83","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":14},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"84","replacedBy":"88"},{"ruleId":"86","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":127,"column":29,"nodeType":"92","endLine":128,"endColumn":165},{"ruleId":"90","severity":1,"message":"91","line":62,"column":29,"nodeType":"92","endLine":63,"endColumn":165},{"ruleId":"90","severity":1,"message":"91","line":163,"column":29,"nodeType":"92","endLine":164,"endColumn":65},{"ruleId":"79","severity":1,"message":"93","line":1,"column":16,"nodeType":"81","messageId":"82","endLine":1,"endColumn":24},{"ruleId":"90","severity":1,"message":"91","line":34,"column":29,"nodeType":"92","endLine":35,"endColumn":165},"no-unused-vars","'ExampleComponent' is defined but never used.","Identifier","unusedVar","'Editor' is defined but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],["94"],["95"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation"]